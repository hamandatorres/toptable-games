version: "3.8"

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: toptable-postgres-prod
    restart: always
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-toptable_games}
      POSTGRES_USER: ${POSTGRES_USER:-postgres}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data_prod:/var/lib/postgresql/data
      - ./db:/docker-entrypoint-initdb.d
    networks:
      - toptable-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-postgres}"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for session storage
  redis:
    image: redis:7-alpine
    container_name: toptable-redis-prod
    restart: always
    volumes:
      - redis_data_prod:/data
    networks:
      - toptable-network
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}

  # Application (Frontend + Backend)
  app:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: toptable-app-prod
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      NODE_ENV: production
      SERVER_PORT: 4050
      CONNECTION_STRING: postgresql://${POSTGRES_USER:-postgres}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB:-toptable_games}
      SESSION_SECRET: ${SESSION_SECRET}
      REDIS_URL: redis://:${REDIS_PASSWORD}@redis:6379
      VITE_CLIENT_ID: ${VITE_CLIENT_ID}
    ports:
      - "80:4050"
      - "443:4050"
    networks:
      - toptable-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4050/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Reverse Proxy (optional)
  nginx:
    image: nginx:alpine
    container_name: toptable-nginx
    restart: always
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./ssl:/etc/nginx/ssl
    depends_on:
      - app
    networks:
      - toptable-network

volumes:
  postgres_data_prod:
    driver: local
  redis_data_prod:
    driver: local

networks:
  toptable-network:
    driver: bridge
