const { execSync } = require("child_process");

function testCIEnvironment() {
	console.log("üß™ Testing CI Environment Simulation");
	console.log("=====================================");

	// Test 1: Platform detection script
	console.log("\n1Ô∏è‚É£ Testing platform detection script...");
	try {
		execSync("node scripts/install-platform-deps.js", { stdio: "inherit" });
		console.log("‚úÖ Platform detection script passed");
	} catch (error) {
		console.log("‚ùå Platform detection script failed:", error.message);
	}

	// Test 2: SASS setup script
	console.log("\n2Ô∏è‚É£ Testing SASS setup script...");
	try {
		execSync("node scripts/setup-sass.js", { stdio: "inherit" });
		console.log("‚úÖ SASS setup script passed");
	} catch (error) {
		console.log("‚ùå SASS setup script failed:", error.message);
	}

	// Test 3: Build CI script
	console.log("\n3Ô∏è‚É£ Testing build:ci script...");
	try {
		execSync("npm run build:ci", { stdio: "inherit" });
		console.log("‚úÖ Build CI script passed");
	} catch (error) {
		console.log("‚ùå Build CI script failed:", error.message);
	}

	// Test 4: Check if dist directory exists
	console.log("\n4Ô∏è‚É£ Verifying build output...");
	try {
		const fs = require("fs");
		if (fs.existsSync("dist")) {
			const files = fs.readdirSync("dist");
			console.log(`‚úÖ Build output verified - ${files.length} files in dist/`);
		} else {
			console.log("‚ùå Build output not found");
		}
	} catch (error) {
		console.log("‚ùå Build output verification failed:", error.message);
	}

	console.log("\nüéâ CI Environment Test Complete!");
}

// Run the test
testCIEnvironment();
