# Simplified Docker build for CI/CD reliability
FROM node:22-alpine

# Install required packages
RUN apk update && apk upgrade && \
    apk add --no-cache curl tini && \
    rm -rf /var/cache/apk/*

WORKDIR /app

# Copy package files and install dependencies
COPY package*.json ./
RUN npm ci --ignore-scripts && \
    npm install @rollup/rollup-linux-x64-musl @swc/core-linux-x64-musl sass-embedded --no-save --force && \
    npm cache clean --force

# Copy all source code
COPY . .

# Build the application
ENV NODE_ENV=production
ENV CI=true
RUN npm run build

# Create non-root user and set ownership efficiently
RUN addgroup -g 1001 -S nodejs && \
    adduser -S nodejs -u 1001 -G nodejs && \
    mkdir -p /app/logs && \
    chown -R nodejs:nodejs /app/logs /app/dist /app/node_modules

# Switch to non-root user
USER nodejs

# Set runtime environment
ENV SERVER_PORT=4050
EXPOSE 4050

# Health check
HEALTHCHECK --interval=30s --timeout=10s --start-period=30s --retries=3 \
  CMD curl -f http://localhost:4050/api/health || exit 1

# Start application
ENTRYPOINT ["tini", "--"]
CMD ["npm", "start"]

